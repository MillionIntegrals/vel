name: 'mujoco_trpo'


env:
  name: vel.rl.env.mujoco
  game: !param game = 'Reacher-v2'


vec_env:
  name: vel.rl.vecenv.dummy
  normalize_returns: true


model:
  name: vel.rl.policy.trpo

  discount_factor: 0.99 # Discount factor for the rewards
  gae_lambda: 0.98 # Generalized Advantage Estimator Lambda parameter

  max_kl: 0.01
  cg_iters: 10
  line_search_iters: 10
  improvement_acceptance_ratio: 0.1
  cg_damping: 0.1
  vf_iters: 5
  entropy_coefficient: 0.0

  input_net:
    name: vel.net.modular
    layers:
      - name: vel.net.layer.input.normalize_ewma

  policy_net:
    name: vel.net.modular
    layers:
      - name: vel.net.layer.mlp
        hidden_layers: [32, 32]
        activation: 'tanh'

  value_net:
    name: vel.net.modular
    layers:
      - name: vel.net.layer.mlp
        hidden_layers: [32, 32]
        activation: 'tanh'


reinforcer:
  name: vel.rl.reinforcer.on_policy_iteration_reinforcer

  env_roller:
    name: vel.rl.env_roller.step_env_roller

  parallel_envs: 1 # How many environments to run in parallel
  number_of_steps: 1024 # How many environment steps go into a single batch
  batch_size: 1024 # How many samples can go into the model once



optimizer:
  name: vel.optimizer.adam
  lr: 1.0e-3
  epsilon: 1.0e-8
  #    max_grad_norm: 0.5


commands:
  train:
    name: vel.rl.command.rl_train_command
    total_frames: 1.0e6
    batches_per_epoch: 4

  record:
    name: vel.rl.command.record_movie_command
    takes: 10
    videoname: 'reacher_vid_{:04}.avi'
    sample_args:
      argmax_sampling: true
